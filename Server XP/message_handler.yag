{{/*
	Handles messages for the leveling system.
	See <https://yagpdb-cc.github.io/leveling/message-handler> for more information.
 
	Author: jo3-l <https://github.com/jo3-l>
    Adapted and modified by OBL
*/}}

{{ $settings := 0 }} {{/* Instantiate settings at nil value */}}
{{ $roleRewards := sdict "type" "stack" }} {{/* Default role reward settings */}}
{{ with (dbGet 0 "xpSettings") }} {{ $settings = sdict .Value }} {{ end }} {{/* If in db, then we update value */}}
{{ with (dbGet 0 "roleRewards") }} {{ $roleRewards = sdict .Value }} {{ end }} {{/* See above */}}
 
    {{$botChannel := 876357678274838538}}
    {{$noPingRole := 966962287128752138}}
    {{$xpToGain := $settings.min}} {{/*Initiate User XP for this message*/}}
    {{$bonus := 100}}

{{$server_bonus := or (dbGet 0 "XP-Bonus").Value 750011300905746527}}
 
{{if or .Message.Embeds .Message.Attachments}}
    {{$xpToGain = $settings.max}}
    {{if eq .Channel.ID (toInt $server_bonus)}}
        {{$xpToGain = add $xpToGain $bonus}}
    {{end}} 
{{end}}
{{dbSet .User.ID "XPinc" $xpToGain}}

{{if eq .Channel.ID $botChannel}}
    {{execCC 35 $botChannel 0 nil}}
{{end}}
 
{{ $cooldown := false }} {{/* We presume that user is not on cooldown */}}
{{ if (dbGet  .User.ID "xpCooldown") }} {{ $cooldown = true }} {{ end }} {{/* Make user on cooldown if there is cooldown DB entry */}}
 
{{ if and (not $cooldown) $settings }} {{/* Make sure that both the user is not on cooldown and settings exist */}}
		
	{{ $currentXp := 0 }} {{/* User current XP */}}
	{{ with (dbGet .User.ID "xp") }}
		{{ $currentXp = .Value }}
	{{ end }} {{/* Update XP amount if present */}}
    {{/*print (dbGet .User.ID "XPinc").Value*/}}
	{{ $currentLvl := roundFloor (mult 0.1 (sqrt $currentXp)) }} {{/* Calculate level */}}
	{{ $newXp := dbIncr .User.ID "xp" (dbGet .User.ID "XPinc").Value}} {{/* Increment the xp */}}
	{{ $newLvl := roundFloor (mult 0.1 (sqrt	 $newXp)) }} {{/* Calculate new level */}}
	{{ $channel := or $settings.channel .Channel.ID }}
	{{ if not (.Guild.GetChannel $channel) }} {{ $channel = .Channel.ID }} {{ end }}
 
	{{ if ne $newLvl $currentLvl }} {{/* If the level changed / user ranked up */}}
		{{ $type := $roleRewards.type }} {{/* Type of role giving (highest / stack) */}}
		{{ $toAdd := or ($roleRewards.Get (json $newLvl)) 0 }} {{/* Try to get the role reward for this level */}}
		{{ range $level, $reward := $roleRewards }} {{/* Loop over role rewards */}}
			{{- if and (ge (toInt $newLvl) (toInt $level)) (not (hasRoleID $reward)) (eq $type "stack") (ne $level "type") }} {{- addRoleID $reward }}
			{{- else if and (hasRoleID $reward) (eq $type "highest") $toAdd }} {{- removeRoleID $reward }} {{- end -}}
		{{ end }}
		{{ if $toAdd }} {{ addRoleID $toAdd }} {{ end }}
		{{$pfp := .User.AvatarURL "256"}}
		{{ $embed := cembed 
			"title" "‚ùØ Level up!"
			"thumbnail" (sdict "url" $pfp)
			"description" (printf "Congratulations **%s**! You've leveled up to level %d - keep it up!" .User.String (toInt $newLvl))
			"color" 14232643
		}}
			{{ if $settings.announcements}}
				{{execCC 35 $botChannel 0 nil}}
                {{if not (hasRoleID $noPingRole)}}
                    {{ sendMessage $channel (complexMessage "content" .User.Mention "embed" $embed) }} {{/* Send levelup notification */}}
                {{else}}
		        {{sendMessage $channel (complexMessage "content" (print "**Hey " .User.Username ",**") "embed" $embed) }}
 		    {{/* Send levelup notification */}}
			{{ end }}
	{{ end }}
{{end}}
	{{ $cooldownSeconds := div $settings.cooldown 1000000000 }} {{/* Convert cooldown to seconds */}}
	{{ dbSetExpire .User.ID "xpCooldown" true $cooldownSeconds }} {{/* Set cooldown entry */}}
{{ end }} 
